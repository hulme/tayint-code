{FlexBTTaylorVarIndIntNewNumFlexConfTbTCoArbExp[func_,varlist_?VectorQ,conflist_?VectorQ,intstartlist_?VectorQ,intstoplist_?VectorQ,start_,ord_,name_,num_]:=Block[{Jac,confFunc,Num,ExpFunc,TaylorFunc,IntFunc,TaylorResult,alpha,sum,powlist,powvarlist,intlimlist,e,il,ih,pow,sumindexlist,sumlimlist,k,derlist,intminlist,intmaxlist,varlist2,conflistInv,y,explist},
powlist=pow[#]&/@Range[1,Length[varlist]];
powvarlist=varlist[[#]]^(powlist[[#]])&/@Range[1,Length[varlist]];
varlist2=y[#]&/@Range[1,Length[varlist]];
conflistInv=Flatten[(varlist[[#]]/.Solve[conflist[[#]]==varlist2[[#]],varlist[[#]]])&/@Range[1,Length[varlist]]];
explist=(((conflistInv[[#]]/.{varlist2[[#]]->intstartlist[[#]]})+(conflistInv[[#]]/.{varlist2[[#]]->intstoplist[[#]]}))*1/2)&/@Range[1,Length[varlist]];
intminlist=((conflistInv[[#]]/.{varlist2[[#]]->intstartlist[[#]]})-explist[[#]])&/@Range[1,Length[varlist]];
intmaxlist=((conflistInv[[#]]/.{varlist2[[#]]->intstoplist[[#]]})-explist[[#]])&/@Range[1,Length[varlist]];
intlimlist={varlist[[#]],intminlist[[#]],intmaxlist[[#]]}&/@Range[1,Length[varlist]];
sumindexlist=k[#]&/@Range[1,Length[varlist]];
sumlimlist=({sumindexlist[[#]],0,ord})&/@Range[1,Length[varlist]];
Jac=Times@@((Simplify[D[conflist[[#]],varlist[[#]]],TimeConstraint->3])&/@Range[1,Length[varlist]]);
confFunc=Simplify[Jac*(func/.Thread[varlist->conflist]),TimeConstraint->3];
{sum=(Flatten[Table[ReplaceRepeated[alpha->Sequence[]][If[start<=(Plus@@sumindexlist)<=ord,sumindexlist,alpha]],Evaluate[Sequence@@sumlimlist]],Length[varlist]-1]);}
Table[derlist[i]=({varlist[[#]],sum[[i]][[#]]})&/@Range[1,Length[varlist]],{i,1,Length[sum]}];
(TaylorFunc[#]=1/(Times@@(sum[[#]]!)) (D[confFunc,Evaluate[Sequence@@derlist[#]]]/.Thread[varlist->explist]))&/@Range[1,Length[sum]];
IntFunc=Integrate[Times@@@((powvarlist/.Thread[powlist->sum[[#]]])&/@Range[1,Length[sum]]),Evaluate[Sequence@@intlimlist]];
(TaylorResult[#]=((TaylorFunc[#]*IntFunc[[#]])))&/@Range[1,Length[sum]];
(Put[Compress[TaylorResult[#]],(ToString[num]<>"TAYINTCO"<>ToString[name]<>"["<>ToString[sum[[#]]]<>"].h")])&/@Range[1,Length[sum]];]}
{FlexBTTaylorVarIndIntNewNumFlexConfTbTCoArbExpIN[pre_,varlist_?VectorQ,knamelist_?VectorQ,kvallist_?VectorQ,namein_,nameout_,start_,ord_,secstart_,secnum_]:=Block[{sum,ResultListPre,ResultList,alpha,intminlist,intmaxlist,sumindexlist,sumlimlist,k},
sumindexlist=k[#]&/@Range[1,Length[varlist]];
sumlimlist=({sumindexlist[[#]],0,ord})&/@Range[1,Length[varlist]];
{sum=(Flatten[Table[ReplaceRepeated[alpha->Sequence[]][If[start<=(Plus@@sumindexlist)<=ord,sumindexlist,alpha]],Evaluate[Sequence@@sumlimlist]],Length[varlist]-1]);}
Put[(pre)*Sum[((Uncompress[(Import[(ToString[i]<>"TAYINTCO"<>ToString[namein]<>"["<>ToString[sum[[#]]]<>"].h")])])/.Thread[knamelist->kvallist]),{i,secstart,secnum}],("KINETAYINTCO"<>ToString[nameout]<>"["<>ToString[sum[[#]]]<>"].h")]&/@Range[1,Length[sum]];
Put[Total[Import[(("KINETAYINTCO"<>ToString[nameout]<>"["<>ToString[sum[[#]]]<>"].h"))]&/@Range[1,Length[sum]]],("TOTKINETAYINTCO"<>ToString[nameout]<>".txt")];
ResultList=Import[("TOTKINETAYINTCO"<>ToString[nameout]<>".txt")];
Return[ResultList]]}
